mport mezz.jei.api.IModPlugin;
import mezz.jei.api.constants.VanillaTypes;
import mezz.jei.api.gui.IRecipeLayout;
import mezz.jei.api.gui.drawable.IDrawable;
import mezz.jei.api.gui.ingredient.IGuiItemStackGroup;
import mezz.jei.api.helpers.IGuiHelper;
import mezz.jei.api.helpers.IJeiHelpers;
import mezz.jei.api.ingredients.IIngredients;
import mezz.jei.api.recipe.category.IRecipeCategory;
import mezz.jei.api.registration.IRecipeCatalystRegistration;
import mezz.jei.api.registration.IRecipeCategoryRegistration;
import mezz.jei.api.registration.IRecipeRegistration;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.util.ResourceLocation;

import java.util.ArrayList;
import java.util.List;

package net.mcreator.magica;


@mezz.jei.api.JeiPlugin
public class JeiPlugin {
public static IJeiHelpers jeiHelper;
	@Override
	public ResourceLocation getPluginUid() {
		return new ResourceLocation("magica", "default");
	}

	@Override
	public void registerCategories(IRecipeCategoryRegistration registration) {
		jeiHelper = registration.getJeiHelpers();
		registration.addRecipeCategories(new magica_furnace.JeiCategory(jeiHelper.getGuiHelper()));
	}

	@Override
	public void registerRecipes(IRecipeRegistration registration) {
		registration.addRecipes(generate magica_furnace.Recipes(), magica_furnace.JeiCategory.Uid);
		// ...
	}

	private List<magica_furnace.JeiCategory.magica_furnace.RecipeWrapper> generatemagica_furnace.Recipes() {
		List<magica_furnace.JeiCategory.magica_furnace.RecipeWrapper> recipes = new ArrayList<>();
		ArrayList<ItemStack> inputs = new ArrayList<>();
        ArrayList<ItemStack> outputs = new ArrayList<>();
        inputs.add(new ItemStack([ANYINPUTITEM]));
        outputs.add(new ItemStack([ANYOUTPUTITEM]));
        // ...
		recipes.add(new magica_furnace.JeiCategory.magica_furnace.RecipeWrapper(inputs, outputs));
		return recipes;
	}

	@Override
	public void registerRecipeCatalysts(IRecipeCatalystRegistration registration) {
		registration.addRecipeCatalyst(new ItemStack(magica_furnace..block), magica_furnace.JeiCategory.Uid);
	}
	public static class magica_furnace.JeiCategory implements IRecipeCategory<magica_furnace.JeiCategory.magica_furnace.RecipeWrapper> {
		private static ResourceLocation Uid = new ResourceLocation("magica", "magica_furnace.category");
		private static final int input1 = 0; // THE NUMBER = SLOTID
		private static final int output1 = 1; // THE NUMBER = SLOTID
		// ...
		private final String title;
		private final IDrawable background;
		public magica_furnace.JeiCategory(IGuiHelper guiHelper) {
			this.title = "magica furnace";
			this.background = guiHelper.createDrawable(new ResourceLocation("magica", "magica:textures/mgy.png"), 0, 0, 348, 320);
		}

		@Override
		public ResourceLocation getUid() {
			return Uid;
		}

		@Override
		public Class<? extends magica_furnace.RecipeWrapper> getRecipeClass() {
			return magica_furnace.JeiCategory.magica_furnace.RecipeWrapper.class;
		}

		@Override
		public String getTitle() {
			return title;
		}

		@Override
		public IDrawable getBackground() {
			return background;
		}

		@Override
		public IDrawable getIcon() {
			return null;
		}

		@Override
		public void setIngredients(magica_furnace.RecipeWrapper recipeWrapper, IIngredients iIngredients) {
            iIngredients.setInputs(VanillaTypes.ITEM, recipeWrapper.getInput());
            iIngredients.setOutputs(VanillaTypes.ITEM, recipeWrapper.getOutput());
		}

		@Override
		public void setRecipe(IRecipeLayout iRecipeLayout, magica_furnace.RecipeWrapper recipeWrapper, IIngredients iIngredients) {
			IGuiItemStackGroup stacks = iRecipeLayout.getItemStacks();
			stacks.init(input1, true, 25, 21);
			stacks.init(output1, false, 97, 39);
            // ...

            stacks.set(input1, iIngredients.getInputs(minecraft.raw_porkchop).get(0));
			stacks.set(output1, iIngredients.getOutputs(magica.magic_meat).get(0));
			// ...
		}
		public static class magica_furnace.RecipeWrapper {
            private List<ItemStack> input;
            private List<ItemStack> output;

            public magica_furnace.RecipeWrapper(List<ItemStack> input, List<ItemStack> output) {
                this.input = input;
                this.output = output;
            }


            public List<ItemStack> getInput() {
                return input;
            }

            public List<ItemStack> getOutput() {
                return output;
            }
        }
	}
}
